version: '3'

services:
  api:
    container_name: discord-api-server
    build:
      context: ./discord-server
      dockerfile: ../docker/node/Dockerfile
    image: discord.api/node
    restart: unless-stopped
    tty: true
    volumes:
      - ./discord-server:/var/www/discord-server
    networks:
      - discord-network

  client:
    container_name: discord-client
    build:
      context: ./discord-client
      dockerfile: ../docker/client/Dockerfile
    image: discord.api/client
    restart: unless-stopped
    tty: true
    volumes:
      - ./discord-client:/var/www/discord-client
    networks:
      - discord-network
  
  webserver:
    image: nginx:alpine
    container_name: discord-webserver
    restart: unless-stopped
    tty: true
    ports:
      - 8080:8080
    volumes:
      - ./discord-api:/var/www/discord-api
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - discord-network
    

  database:
    image: mysql:latest
    container_name: discord-database
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql:/var/lib/mysql
    networks:
      - discord-network
    
  redis:
    image: redis:alpine
    container_name: discord-redis
    command: redis-server
    expose:
      - 6379
    networks:
      - discord-network
  

networks:
  discord-network:
    driver: bridge
